name: 'App Review Check'

on:
  pull_request:
    # types:
    #   - opened
    #   - edited
    #   - synchronize
    # branches:
    #   - 'main'
    #   - 'feat/gha-code-review'

permissions:
  pull-requests: write

jobs:
  main:
    name: App Review Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get the current working directory
            const currentWorkingDirectory = process.cwd();
            console.log('Current working directory:', currentWorkingDirectory);

            // List files and directories in the current directory
            const files = fs.readdirSync(currentWorkingDirectory);

            console.log('Files and directories in current working directory:');
            files.forEach(file => {
              const fullPath = path.join(currentWorkingDirectory, file);
              const isDirectory = fs.statSync(fullPath).isDirectory();
              console.log(`${isDirectory ? 'DIR ' : 'FILE'}: ${file}`);
            });

            const script = require('./.github/workflows/app-review-script.js')
            await script({github, context, core})

      # - name: Check for LICENSE file in PR
      #   id: check_license
      #   run: |
      #     if ! git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^LICENSE$'; then
      #       echo "LICENSE file is missing in the pull request."
      #       exit 1
      #     fi
      #     echo "LICENSE file exists in the pull request."
      - name: Add a comment and label to the PR
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const comment_body = 'Thank you for your pull request! We will review it shortly.';
            const label_name = 'needs review';

            // Add a comment to the PR
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body: comment_body,
            });

            // Add a label to the PR
            await github.rest.issues.addLabels({
              ...context.repo,
              issue_number,
              labels: [label_name],
            });
